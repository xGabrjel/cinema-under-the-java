plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}

group = 'com'
version = '1.0'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.itextpdf:itextpdf:5.5.13.3'
	implementation 'net.glxn:qrgen:1.4'
	implementation 'com.google.zxing:core:3.5.2'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy jacocoTestReport
}

bootJar {
	archiveFileName = "justAchieve-docker.${archiveExtension.get()}"
}

jar {
	enabled = false
}

jacoco {
	toolVersion = '0.8.8'
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('htmlJacocoReport')
	}
}

compileJava.options.encoding = 'UTF-8'